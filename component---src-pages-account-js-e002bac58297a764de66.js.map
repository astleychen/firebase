{"version":3,"sources":["webpack:///./src/components/PasswordForget/index.js","webpack:///./src/components/PasswordChange/index.js","webpack:///./src/components/LoginManagement/index.js","webpack:///./src/pages/account.js"],"names":["INITIAL_STATE","email","error","PasswordForgetForm","props","onSubmit","event","state","firebase","doPasswordReset","then","setState","catch","preventDefault","onChange","target","name","value","render","this","isInvalid","type","placeholder","disabled","message","Component","PasswordForgetLink","to","ROUTES","withFirebase","passwordOne","passwordTwo","PasswordChangeForm","doPasswordUpdate","SIGN_IN_METHODS","id","provider","LoginManagement","_initFirebase","firebaseInit","fetchSignInMethods","auth","fetchSignInMethodsForEmail","authUser","activeSignInMethods","onSocialLoginLink","currentUser","linkWithPopup","onDefaultLoginLink","password","credential","emailAuthProvider","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","componentDidMount","componentDidUpdate","map","signInMethod","onlyOneLeft","length","isEnabled","includes","key","onLink","SocialLoginToggle","onClick","DefaultLoginToggle","AccountPage","compose","withEmailVerification","withAuthorization","Consumer","PasswordForget","PasswordChange"],"mappings":"sMAMMA,EAAgB,CACpBC,MAAO,GACPC,MAAO,MAGHC,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAKFC,SAAW,SAAAC,GAAU,IACXL,EAAU,EAAKM,MAAfN,MAER,EAAKG,MAAMI,SACRC,gBAAgBR,GAChBS,MAAK,WACJ,EAAKC,SAAL,iBAAmBX,OAEpBY,OAAM,SAAAV,GACL,EAAKS,SAAS,CAAET,aAGpBI,EAAMO,kBAlBW,EAqBnBC,SAAW,SAAAR,GAAU,IAAD,EAClB,EAAKK,WAAL,MAAiBL,EAAMS,OAAOC,MAAOV,EAAMS,OAAOE,MAAlD,KAnBA,EAAKV,MAAL,iBAAkBP,GAHD,E,oCAyBnBkB,OAAA,WAAU,IAAD,EACkBC,KAAKZ,MAAtBN,EADD,EACCA,MAAOC,EADR,EACQA,MAETkB,EAAsB,KAAVnB,EAElB,OACE,0BAAMI,SAAUc,KAAKd,UACnB,2BACEW,KAAK,QACLC,MAAOhB,EACPa,SAAUK,KAAKL,SACfO,KAAK,OACLC,YAAY,kBAEd,4BAAQC,SAAUH,EAAWC,KAAK,UAAlC,qBAICnB,GAAS,2BAAIA,EAAMsB,W,GA5CKC,aAkD3BC,EAAqB,kBACzB,2BACE,kBAAC,IAAD,CAAMC,GAAIC,KAAV,sBAIWC,gBAAa1B,I,0IC/DtBH,EAAgB,CACpB8B,YAAa,GACbC,YAAa,GACb7B,MAAO,MAGH8B,E,YACJ,WAAY5B,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAKFC,SAAW,SAAAC,GAAU,IACXwB,EAAgB,EAAKvB,MAArBuB,YAER,EAAK1B,MAAMI,SACRyB,iBAAiBH,GACjBpB,MAAK,WACJ,EAAKC,SAAL,iBAAmBX,OAEpBY,OAAM,SAAAV,GACL,EAAKS,SAAS,CAAET,aAGpBI,EAAMO,kBAlBW,EAqBnBC,SAAW,SAAAR,GAAU,IAAD,EAClB,EAAKK,WAAL,MAAiBL,EAAMS,OAAOC,MAAOV,EAAMS,OAAOE,MAAlD,KAnBA,EAAKV,MAAL,iBAAkBP,GAHD,E,oCAyBnBkB,OAAA,WAAU,IAAD,EACqCC,KAAKZ,MAAzCuB,EADD,EACCA,YAAaC,EADd,EACcA,YAAa7B,EAD3B,EAC2BA,MAE5BkB,EACJU,IAAgBC,GAA+B,KAAhBD,EAEjC,OACE,0BAAMzB,SAAUc,KAAKd,UACnB,2BACEW,KAAK,cACLC,MAAOa,EACPhB,SAAUK,KAAKL,SACfO,KAAK,WACLC,YAAY,iBAEd,2BACEN,KAAK,cACLC,MAAOc,EACPjB,SAAUK,KAAKL,SACfO,KAAK,WACLC,YAAY,yBAEd,4BAAQC,SAAUH,EAAWC,KAAK,UAAlC,qBAICnB,GAAS,2BAAIA,EAAMsB,W,GApDKC,aA0DlBI,cAAaG,GChEtBE,EAAkB,CACtB,CACEC,GAAI,WACJC,SAAU,MAEZ,CACED,GAAI,aACJC,SAAU,kBAEZ,CACED,GAAI,eACJC,SAAU,oBAEZ,CACED,GAAI,cACJC,SAAU,oBAIRC,E,YAGJ,WAAYjC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAHFkC,eAAgB,EAEG,EASnBC,aAAe,WACT,EAAKnC,MAAMI,WAAa,EAAK8B,gBAC/B,EAAKA,eAAgB,EAErB,EAAKE,uBAbU,EAyBnBA,mBAAqB,WACnB,EAAKpC,MAAMI,SAASiC,KACjBC,2BAA2B,EAAKtC,MAAMuC,SAAS1C,OAC/CS,MAAK,SAAAkC,GAAmB,OACvB,EAAKjC,SAAS,CAAEiC,sBAAqB1C,MAAO,UAE7CU,OAAM,SAAAV,GAAK,OAAI,EAAKS,SAAS,CAAET,cA/BjB,EAkCnB2C,kBAAoB,SAAAT,GAClB,EAAKhC,MAAMI,SAASiC,KAAKK,YACtBC,cAAc,EAAK3C,MAAMI,SAAS4B,IAClC1B,KAAK,EAAK8B,oBACV5B,OAAM,SAAAV,GAAK,OAAI,EAAKS,SAAS,CAAET,cAtCjB,EAyCnB8C,mBAAqB,SAAAC,GACnB,IAAMC,EAAa,EAAK9C,MAAMI,SAAS2C,kBAAkBD,WACvD,EAAK9C,MAAMuC,SAAS1C,MACpBgD,GAGF,EAAK7C,MAAMI,SAASiC,KAAKK,YACtBM,kCAAkCF,GAClCxC,KAAK,EAAK8B,oBACV5B,OAAM,SAAAV,GAAK,OAAI,EAAKS,SAAS,CAAET,cAlDjB,EAqDnBmD,SAAW,SAAAC,GACT,EAAKlD,MAAMI,SAASiC,KAAKK,YACtBS,OAAOD,GACP5C,KAAK,EAAK8B,oBACV5B,OAAM,SAAAV,GAAK,OAAI,EAAKS,SAAS,CAAET,cAtDlC,EAAKK,MAAQ,CACXqC,oBAAqB,GACrB1C,MAAO,MALQ,E,4CAiBnBsD,kBAAA,WACErC,KAAKoB,gB,EAGPkB,mBAAA,WACEtC,KAAKoB,gB,EAsCPrB,OAAA,WAAU,IAAD,SACgCC,KAAKZ,MAApCqC,EADD,EACCA,oBAAqB1C,EADtB,EACsBA,MAE7B,OACE,gDAEE,4BACGgC,EAAgBwB,KAAI,SAAAC,GACnB,IAAMC,EAA6C,IAA/BhB,EAAoBiB,OAClCC,EAAYlB,EAAoBmB,SACpCJ,EAAaxB,IAGf,OACE,wBAAI6B,IAAKL,EAAaxB,IACC,aAApBwB,EAAaxB,GACZ,kBAAC,EAAD,CACEyB,YAAaA,EACbE,UAAWA,EACXH,aAAcA,EACdM,OAAQ,EAAKjB,mBACbK,SAAU,EAAKA,WAGjB,kBAAC,EAAD,CACEO,YAAaA,EACbE,UAAWA,EACXH,aAAcA,EACdM,OAAQ,EAAKpB,kBACbQ,SAAU,EAAKA,gBAO1BnD,GAASA,EAAMsB,U,GAnGMC,aAyGxByC,EAAoB,SAAC,GAAD,IACxBN,EADwB,EACxBA,YACAE,EAFwB,EAExBA,UACAH,EAHwB,EAGxBA,aACAM,EAJwB,EAIxBA,OACAZ,EALwB,EAKxBA,SALwB,OAOxBS,EACE,4BACEzC,KAAK,SACL8C,QAAS,kBAAMd,EAASM,EAAaxB,KACrCZ,SAAUqC,GAHZ,cAKcD,EAAaxB,IAG3B,4BACEd,KAAK,SACL8C,QAAS,kBAAMF,EAAON,EAAavB,YAFrC,QAIQuB,EAAaxB,KAInBiC,E,YACJ,WAAYhE,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAKFC,SAAW,SAAAC,GACTA,EAAMO,iBAEN,EAAKT,MAAM6D,OAAO,EAAK1D,MAAMuB,aAC7B,EAAKnB,SAAS,CAAEmB,YAAa,GAAIC,YAAa,MAV7B,EAanBjB,SAAW,SAAAR,GAAU,IAAD,EAClB,EAAKK,WAAL,MAAiBL,EAAMS,OAAOC,MAAOV,EAAMS,OAAOE,MAAlD,KAXA,EAAKV,MAAQ,CAAEuB,YAAa,GAAIC,YAAa,IAH5B,E,oCAiBnBb,OAAA,WAAU,IAAD,EAMHC,KAAKf,MAJPwD,EAFK,EAELA,YACAE,EAHK,EAGLA,UACAH,EAJK,EAILA,aACAN,EALK,EAKLA,SALK,EAQ8BlC,KAAKZ,MAAlCuB,EARD,EAQCA,YAAaC,EARd,EAQcA,YAEfX,EACJU,IAAgBC,GAA+B,KAAhBD,EAEjC,OAAOgC,EACL,4BACEzC,KAAK,SACL8C,QAAS,kBAAMd,EAASM,EAAaxB,KACrCZ,SAAUqC,GAHZ,cAKcD,EAAaxB,IAG3B,0BAAM9B,SAAUc,KAAKd,UACnB,2BACEW,KAAK,cACLC,MAAOa,EACPhB,SAAUK,KAAKL,SACfO,KAAK,WACLC,YAAY,iBAEd,2BACEN,KAAK,cACLC,MAAOc,EACPjB,SAAUK,KAAKL,SACfO,KAAK,WACLC,YAAY,yBAGd,4BAAQC,SAAUH,EAAWC,KAAK,UAAlC,QACQsC,EAAaxB,M,GAzDIV,aAgElBI,cAAaQ,GC1LtBgC,EAAcC,YAClBC,IACAC,aAJgB,SAAA7B,GAAQ,QAAMA,KAEZ2B,EAjBI,kBACtB,kBAAC,WAAD,KACE,kBAAC,IAAgBG,SAAjB,MACG,SAAA9B,GAAQ,OACP,6BACE,wCAAcA,EAAS1C,OACvB,kBAACyE,EAAA,EAAD,MACA,kBAACC,EAAD,MACA,kBAAC,EAAD,CAAiBhC,SAAUA,YActB,4BACb,kBAAC,IAAD,KACE,kBAAC0B,EAAD","file":"component---src-pages-account-js-e002bac58297a764de66.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'gatsby';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default withFirebase(PasswordForgetForm);\n\nexport { PasswordForgetLink };\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SIGN_IN_METHODS = [\n  {\n    id: 'password',\n    provider: null,\n  },\n  {\n    id: 'google.com',\n    provider: 'googleProvider',\n  },\n  {\n    id: 'facebook.com',\n    provider: 'facebookProvider',\n  },\n  {\n    id: 'twitter.com',\n    provider: 'twitterProvider',\n  },\n];\n\nclass LoginManagement extends Component {\n  _initFirebase = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  firebaseInit = () => {\n    if (this.props.firebase && !this._initFirebase) {\n      this._initFirebase = true;\n\n      this.fetchSignInMethods();\n    }\n  };\n\n  componentDidMount() {\n    this.firebaseInit();\n  }\n\n  componentDidUpdate() {\n    this.firebaseInit();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods =>\n        this.setState({ activeSignInMethods, error: null }),\n      )\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = password => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <div>\n        Sign In Methods:\n        <ul>\n          {SIGN_IN_METHODS.map(signInMethod => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(\n              signInMethod.id,\n            );\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === 'password' ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink,\n}) =>\n  isEnabled ? (\n    <button\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button\n      type=\"button\"\n      onClick={() => onLink(signInMethod.provider)}\n    >\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      onlyOneLeft,\n      isEnabled,\n      signInMethod,\n      onUnlink,\n    } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <button\n        type=\"button\"\n        onClick={() => onUnlink(signInMethod.id)}\n        disabled={onlyOneLeft}\n      >\n        Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(LoginManagement);\n","import React, { Fragment } from 'react';\nimport { compose } from 'recompose';\n\nimport Layout from '../components/layout';\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification,\n} from '../components/Session';\nimport PasswordForgetForm from '../components/PasswordForget';\nimport PasswordChangeForm from '../components/PasswordChange';\nimport LoginManagement from '../components/LoginManagement';\n\nconst AccountPageBase = () => (\n  <Fragment>\n    <AuthUserContext.Consumer>\n      {authUser => (\n        <div>\n          <h1>Account: {authUser.email}</h1>\n          <PasswordForgetForm />\n          <PasswordChangeForm />\n          <LoginManagement authUser={authUser} />\n        </div>\n      )}\n    </AuthUserContext.Consumer>\n  </Fragment>\n);\n\nconst condition = authUser => !!authUser;\n\nconst AccountPage = compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(AccountPageBase);\n\nexport default () => (\n  <Layout>\n    <AccountPage />\n  </Layout>\n);\n"],"sourceRoot":""}