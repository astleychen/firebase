{"version":3,"sources":["webpack:///./src/components/SignUp/index.js","webpack:///./src/pages/signup.js"],"names":["INITIAL_STATE","username","email","passwordOne","passwordTwo","isAdmin","error","SignUpFormBase","props","onSubmit","event","state","roles","ROLES","firebase","doCreateUserWithEmailAndPassword","then","authUser","user","uid","set","doSendEmailVerification","setState","navigate","ROUTES","catch","code","message","preventDefault","onChange","target","name","value","onChangeCheckbox","checked","render","this","isInvalid","type","placeholder","disabled","Component","SignUpLink","to","withFirebase","SignUpPage"],"mappings":"mNAOMA,EAAgB,CACpBC,SAAU,GACVC,MAAO,GACPC,YAAa,GACbC,YAAa,GACbC,SAAS,EACTC,MAAO,MAaHC,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAKFC,SAAW,SAAAC,GAAU,IAAD,EACgC,EAAKC,MAA/CV,EADU,EACVA,SAAUC,EADA,EACAA,MAAOC,EADP,EACOA,YAAaE,EADpB,EACoBA,QAChCO,EAAQ,GAEVP,IACFO,EAAMC,KAAeA,KAGvB,EAAKL,MAAMM,SACRC,iCAAiCb,EAAOC,GACxCa,MAAK,SAAAC,GAEJ,OAAO,EAAKT,MAAMM,SAASI,KAAKD,EAASC,KAAKC,KAAKC,IAAI,CACrDnB,WACAC,QACAU,aAGHI,MAAK,WACJ,OAAO,EAAKR,MAAMM,SAASO,6BAE5BL,MAAK,WACJ,EAAKM,SAAL,iBAAmBtB,IACnBuB,YAASC,QAEVC,OAAM,SAAAnB,GA1CqB,8BA2CtBA,EAAMoB,OACRpB,EAAMqB,QA1Cc,4RA6CtB,EAAKL,SAAS,CAAEhB,aAGpBI,EAAMkB,kBAvCW,EA0CnBC,SAAW,SAAAnB,GAAU,IAAD,EAClB,EAAKY,WAAL,MAAiBZ,EAAMoB,OAAOC,MAAOrB,EAAMoB,OAAOE,MAAlD,KA3CiB,EA8CnBC,iBAAmB,SAAAvB,GAAU,IAAD,EAC1B,EAAKY,WAAL,MAAiBZ,EAAMoB,OAAOC,MAAOrB,EAAMoB,OAAOI,QAAlD,KA5CA,EAAKvB,MAAL,iBAAkBX,GAHD,E,oCAkDnBmC,OAAA,WAAU,IAAD,EAQHC,KAAKzB,MANPV,EAFK,EAELA,SACAC,EAHK,EAGLA,MACAC,EAJK,EAILA,YACAC,EALK,EAKLA,YACAC,EANK,EAMLA,QACAC,EAPK,EAOLA,MAGI+B,EACJlC,IAAgBC,GACA,KAAhBD,GACU,KAAVD,GACa,KAAbD,EAEF,OACE,0BAAMQ,SAAU2B,KAAK3B,UACnB,2BACEsB,KAAK,WACLC,MAAO/B,EACP4B,SAAUO,KAAKP,SACfS,KAAK,OACLC,YAAY,cAEd,2BACER,KAAK,QACLC,MAAO9B,EACP2B,SAAUO,KAAKP,SACfS,KAAK,OACLC,YAAY,kBAEd,2BACER,KAAK,cACLC,MAAO7B,EACP0B,SAAUO,KAAKP,SACfS,KAAK,WACLC,YAAY,aAEd,2BACER,KAAK,cACLC,MAAO5B,EACPyB,SAAUO,KAAKP,SACfS,KAAK,WACLC,YAAY,qBAEd,wCAEE,2BACER,KAAK,UACLO,KAAK,WACLJ,QAAS7B,EACTwB,SAAUO,KAAKH,oBAGnB,4BAAQO,SAAUH,EAAWC,KAAK,UAAlC,WAIChC,GAAS,2BAAIA,EAAMqB,W,GA9GCc,aAoHvBC,EAAa,kBACjB,qDACyB,kBAAC,IAAD,CAAMC,GAAInB,KAAV,aAIZoB,gBAAarC,I,kCCpJ5B,wDAKMsC,EAAa,kBACjB,kBAAC,WAAD,KACE,sCACA,kBAAC,IAAD,QAIW,4BACb,kBAAC,IAAD,KACE,kBAACA,EAAD","file":"component---src-pages-signup-js-35bd44de809b18c50958.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, navigate } from 'gatsby';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  isAdmin: false,\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne, isAdmin } = this.state;\n    const roles = {};\n\n    if (isAdmin) {\n      roles[ROLES.ADMIN] = ROLES.ADMIN;\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          roles,\n        });\n      })\n      .then(() => {\n        return this.props.firebase.doSendEmailVerification();\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        navigate(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <label>\n          Admin:\n          <input\n            name=\"isAdmin\"\n            type=\"checkbox\"\n            checked={isAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport default withFirebase(SignUpFormBase);\n\nexport { SignUpLink };\n","import React, { Fragment } from 'react'\n\nimport Layout from '../components/layout'\nimport SignUpForm from '../components/SignUp'\n\nconst SignUpPage = () => (\n  <Fragment>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </Fragment>\n)\n\nexport default () => (\n  <Layout>\n    <SignUpPage />\n  </Layout>\n)\n"],"sourceRoot":""}