{"version":3,"sources":["webpack:///./src/components/PasswordForget/index.js","webpack:///./src/components/SignUp/index.js","webpack:///./src/components/SignIn/index.js","webpack:///./src/pages/signin.js"],"names":["INITIAL_STATE","email","error","PasswordForgetForm","props","onSubmit","event","state","firebase","doPasswordReset","then","setState","catch","preventDefault","onChange","target","name","value","render","this","isInvalid","type","placeholder","disabled","message","Component","PasswordForgetLink","to","ROUTES","withFirebase","username","passwordOne","passwordTwo","isAdmin","SignUpFormBase","roles","ROLES","doCreateUserWithEmailAndPassword","authUser","user","uid","set","doSendEmailVerification","navigate","code","onChangeCheckbox","checked","SignUpLink","password","ERROR_MSG_ACCOUNT_EXISTS","SignInFormBase","doSignInWithEmailAndPassword","SignInGoogleBase","doSignInWithGoogle","socialAuthUser","displayName","SignInFacebookBase","doSignInWithFacebook","additionalUserInfo","profile","SignInTwitterBase","doSignInWithTwitter","SignInForm","SignInGoogle","SignInFacebook","SignInTwitter","SignInPage","SignIn","PasswordForget","SignUp"],"mappings":"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","file":"component---src-pages-signin-js-6e7347dfc911bcf0f3a8.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'gatsby';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default withFirebase(PasswordForgetForm);\n\nexport { PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { Link, navigate } from 'gatsby';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  isAdmin: false,\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne, isAdmin } = this.state;\n    const roles = {};\n\n    if (isAdmin) {\n      roles[ROLES.ADMIN] = ROLES.ADMIN;\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          roles,\n        });\n      })\n      .then(() => {\n        return this.props.firebase.doSendEmailVerification();\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        navigate(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <label>\n          Admin:\n          <input\n            name=\"isAdmin\"\n            type=\"checkbox\"\n            checked={isAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport default withFirebase(SignUpFormBase);\n\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { navigate } from 'gatsby';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        navigate(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: {},\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        navigate(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: {},\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        navigate(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Facebook</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: {},\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        navigate(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Twitter</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = withFirebase(SignInFormBase);\n\nconst SignInGoogle = withFirebase(SignInGoogleBase);\n\nconst SignInFacebook = withFirebase(SignInFacebookBase);\n\nconst SignInTwitter = withFirebase(SignInTwitterBase);\n\nexport default SignInForm;\n\nexport { SignInGoogle, SignInFacebook, SignInTwitter };\n","import React, { Fragment } from 'react';\n\nimport Layout from '../components/layout';\nimport SignInForm, {\n  SignInGoogle,\n  SignInFacebook,\n  SignInTwitter,\n} from '../components/SignIn';\nimport { SignUpLink } from '../components/SignUp';\nimport { PasswordForgetLink } from '../components/PasswordForget';\n\nconst SignInPage = () => (\n  <Fragment>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignInGoogle />\n    <SignInFacebook />\n    <SignInTwitter />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </Fragment>\n);\n\nexport default () => (\n  <Layout>\n    <SignInPage />\n  </Layout>\n);\n"],"sourceRoot":""}