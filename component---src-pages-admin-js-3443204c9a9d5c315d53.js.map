{"version":3,"sources":["webpack:///./src/components/Users/UserList.js","webpack:///./src/pages/admin.js"],"names":["UserList","props","_initFirebase","firebaseInit","firebase","setState","loading","users","on","snapshot","usersObject","val","usersList","Object","keys","map","key","uid","state","componentDidMount","this","componentDidUpdate","componentWillUnmount","off","render","user","email","username","Component","withFirebase","AdminPage","compose","withEmailVerification","withAuthorization","authUser","roles","ROLES"],"mappings":"uLAIMA,E,YAGJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAHFC,eAAgB,EAEG,EASnBC,aAAe,WACT,EAAKF,MAAMG,WAAa,EAAKF,gBAC/B,EAAKA,eAAgB,EAErB,EAAKG,SAAS,CAAEC,SAAS,IAEzB,EAAKL,MAAMG,SAASG,QAAQC,GAAG,SAAS,SAAAC,GACtC,IAAMC,EAAcD,EAASE,MAEvBC,EAAYC,OAAOC,KAAKJ,GAAaK,KAAI,SAAAC,GAAG,wBAC7CN,EAAYM,GADiC,CAEhDC,IAAKD,OAGP,EAAKX,SAAS,CACZE,MAAOK,EACPN,SAAS,SAtBf,EAAKY,MAAQ,CACXZ,SAAS,EACTC,MAAO,IALQ,E,4CA+BnBY,kBAAA,WACEC,KAAKjB,gB,EAGPkB,mBAAA,WACED,KAAKjB,gB,EAGPmB,qBAAA,WACEF,KAAKnB,MAAMG,SAASG,QAAQgB,O,EAG9BC,OAAA,WAAU,IAAD,EACoBJ,KAAKF,MAAxBX,EADD,EACCA,MAAOD,EADR,EACQA,QAEf,OACE,6BACE,qCACCA,GAAW,4CAEZ,4BACGC,EAAMQ,KAAI,SAAAU,GAAI,OACb,wBAAIT,IAAKS,EAAKR,KACZ,8BACE,uCADF,IACwBQ,EAAKR,KAE7B,8BACE,2CADF,IAC4BQ,EAAKC,OAEjC,8BACE,6CADF,IAC8BD,EAAKE,iB,GAhE1BC,aA0ERC,cAAa7B,G,YCvDtB8B,EAAYC,YAChBC,IACAC,aALgB,SAAAC,GAAQ,OACxBA,KAAcA,EAASC,MAAMC,QAEbL,EAZI,kBACpB,kBAAC,WAAD,KACE,qCACA,0FAEA,kBAAC,EAAD,UAYW,4BACb,kBAAC,IAAD,KACE,kBAACD,EAAD","file":"component---src-pages-admin-js-3443204c9a9d5c315d53.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nclass UserList extends Component {\n  _initFirebase = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  firebaseInit = () => {\n    if (this.props.firebase && !this._initFirebase) {\n      this._initFirebase = true;\n\n      this.setState({ loading: true });\n\n      this.props.firebase.users().on('value', snapshot => {\n        const usersObject = snapshot.val();\n\n        const usersList = Object.keys(usersObject).map(key => ({\n          ...usersObject[key],\n          uid: key,\n        }));\n\n        this.setState({\n          users: usersList,\n          loading: false,\n        });\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.firebaseInit();\n  }\n\n  componentDidUpdate() {\n    this.firebaseInit();\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div>\n        <h2>Users</h2>\n        {loading && <div>Loading ...</div>}\n\n        <ul>\n          {users.map(user => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(UserList);\n","import React, { Fragment } from 'react';\nimport { compose } from 'recompose';\n\nimport Layout from '../components/layout';\nimport {\n  withAuthorization,\n  withEmailVerification,\n} from '../components/Session';\nimport { UserList } from '../components/Users';\nimport * as ROLES from '../constants/roles';\n\nconst AdminPageBase = () => (\n  <Fragment>\n    <h1>Admin</h1>\n    <p>The Admin Page is accessible by every signed in admin user.</p>\n\n    <UserList />\n  </Fragment>\n);\n\nconst condition = authUser =>\n  authUser && !!authUser.roles[ROLES.ADMIN];\n\nconst AdminPage = compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(AdminPageBase);\n\nexport default () => (\n  <Layout>\n    <AdminPage />\n  </Layout>\n);\n"],"sourceRoot":""}